<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>信息收集</title>
    <link href="/2023/05/23/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2023/05/23/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="信息收集工具安装"><a href="#信息收集工具安装" class="headerlink" title="信息收集工具安装"></a>信息收集工具安装</h1><p>工具主要使用平台： 虚拟机：kali-2023.1</p><h2 id="1-子域名收集工具"><a href="#1-子域名收集工具" class="headerlink" title="1. 子域名收集工具"></a>1. 子域名收集工具</h2><blockquote><p>使用工具： amass、oneforall、dnsgen、ksubdomain</p></blockquote><h4 id="1-amass-安装-安装地址：https-github-com-owasp-amass-amass"><a href="#1-amass-安装-安装地址：https-github-com-owasp-amass-amass" class="headerlink" title="1. amass 安装 ( 安装地址：https://github.com/owasp-amass/amass )"></a>1. amass 安装 ( 安装地址：<a href="https://github.com/owasp-amass/amass">https://github.com/owasp-amass/amass</a> )</h4><blockquote><p>Kali Linux:</p></blockquote><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">amass在kali自带的安装包中，若未安装只需更新安装包，下载即可<br>sudo apt-get update<br>sudo apt-get install amass<br></code></pre></td></tr></table></figure><h4 id="2-oneforall-安装-安装地址：https-github-com-shmilylty-OneForAll"><a href="#2-oneforall-安装-安装地址：https-github-com-shmilylty-OneForAll" class="headerlink" title="2. oneforall 安装 ( 安装地址：https://github.com/shmilylty/OneForAll )"></a>2. oneforall 安装 ( 安装地址：<a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a> )</h4><blockquote><p>安装要求： Python ≥ 3.6 版本</p></blockquote><ol><li>通过git从github上拉取代码仓库<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/shmilylty/OneForAll.git<br></code></pre></td></tr></table></figure></li><li>安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd OneForAll/<br>apt-get install python3-dev python3-pip python3-testresources -y<br>python3 -m pip install -U pip setuptools wheel -i https://mirrors.aliyun.com/pypi/simple/<br>pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/<br>python3 oneforall.py --help<br></code></pre></td></tr></table></figure></li><li>使用python3.11版本时可能出现报错情况，如下<br><img src="/2023/05/23/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/oneforall%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99_py_3.11.png" alt="oneforall报错"><br>原因是re库中无法引用sre_parse，解决方法<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">安装python低版本，如 3.8、3.6 等<br><br>或将/usr/local/lib/python3.11/dist-packages/exrex.py中的第25行from re import sre_parse， U注释，添加 import sre_parse也可<br></code></pre></td></tr></table></figure></li></ol><h4 id="3-dnsgen-安装-安装地址：https-github-com-ProjectAnte-dnsgen"><a href="#3-dnsgen-安装-安装地址：https-github-com-ProjectAnte-dnsgen" class="headerlink" title="3. dnsgen 安装 ( 安装地址：https://github.com/ProjectAnte/dnsgen )"></a>3. dnsgen 安装 ( 安装地址：<a href="https://github.com/ProjectAnte/dnsgen">https://github.com/ProjectAnte/dnsgen</a> )</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/ProjectAnte/dnsgen<br>cd dnsgen<br>pip3 install -r requirements.txt<br>python3 setup.py install    <br></code></pre></td></tr></table></figure><h4 id="4-ksubdomain-安装-安装地址：https-github-com-knownsec-ksubdomain"><a href="#4-ksubdomain-安装-安装地址：https-github-com-knownsec-ksubdomain" class="headerlink" title="4. ksubdomain 安装 ( 安装地址：https://github.com/knownsec/ksubdomain )"></a>4. ksubdomain 安装 ( 安装地址：<a href="https://github.com/knownsec/ksubdomain">https://github.com/knownsec/ksubdomain</a> )</h4><ol><li>环境准备：go ( 下载地址：<a href="https://go.dev/dl/">https://go.dev/dl/</a>)<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -C /usr/local -xzf go1.20.5.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure></li><li>设置环境变量<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/profile<br><span class="hljs-meta prompt_"># </span><span class="language-bash">go <span class="hljs-built_in">env</span></span> <br>export GOROOT=/usr/local/go<br>export GOPROXY=https://goproxy.cn,direct<br>export GO111MODULE=on<br>export PATH=$PATH:$GOROOT/bin<br></code></pre></td></tr></table></figure></li><li>上面环境设置完成并进行更新重启后，可能任然无法使用go命令，是由于kali2023版本的shell换成了zsh<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">go <span class="hljs-built_in">env</span></span><br>export GOROOT=/usr/local/go<br>export GOPROXY=https://goproxy.cn,direct<br>export GO111MODULE=on<br>export PATH=$PATH:$GOROOT/bin<br></code></pre></td></tr></table></figure></li><li>更新profile和zshrc<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br>source /etc/zsh/zshrc<br></code></pre></td></tr></table></figure></li><li>ksubdomain 安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get install libpcap-dev<br>git clone https://github.com/knowsec/ksubdomain<br>cd ksubdomain<br>go mod download<br>cd cmd<br>go build ksubdomain.go<br></code></pre></td></tr></table></figure></li></ol><h2 id="2-端口扫描工具"><a href="#2-端口扫描工具" class="headerlink" title="2. 端口扫描工具"></a>2. 端口扫描工具</h2><blockquote><p>使用工具： nmap、fingerprintx、masscan(kali自带)</p></blockquote><h4 id="1-nmap-安装-安装地址：https-nmap-org-download-html"><a href="#1-nmap-安装-安装地址：https-nmap-org-download-html" class="headerlink" title="1. nmap 安装 ( 安装地址：https://nmap.org/download.html)"></a>1. nmap 安装 ( 安装地址：<a href="https://nmap.org/download.html">https://nmap.org/download.html</a>)</h4><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">windows上下载exe文件，直接安装<br></code></pre></td></tr></table></figure><h4 id="2-fingerprintx-安装"><a href="#2-fingerprintx-安装" class="headerlink" title="2. fingerprintx 安装"></a>2. fingerprintx 安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone git@github.com:praetorian-inc/fingerprintx.git<br>cd fingerprintx<br><span class="hljs-meta prompt_"># </span><span class="language-bash">注意go version &gt; 1.18</span><br>go build ./cmd/fingerprintx<br>./fingerprintx -h<br></code></pre></td></tr></table></figure><h2 id="3-站点信息收集工具"><a href="#3-站点信息收集工具" class="headerlink" title="3. 站点信息收集工具"></a>3. 站点信息收集工具</h2><blockquote><p>使用工具： httpx、Wafw00f(kali自带)、TideFinger</p></blockquote><h4 id="1-httpx-安装-安装地址：https-github-com-projectdiscovery-httpx"><a href="#1-httpx-安装-安装地址：https-github-com-projectdiscovery-httpx" class="headerlink" title="1. httpx 安装 ( 安装地址：https://github.com/projectdiscovery/httpx)"></a>1. httpx 安装 ( 安装地址：<a href="https://github.com/projectdiscovery/httpx">https://github.com/projectdiscovery/httpx</a>)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">需要go version &gt; 1.19</span><br>go install -v github.ocm/projectdiscover/httpx/cmd/httpx@latest<br></code></pre></td></tr></table></figure><h4 id="2-TideFinger-安装-安装地址：https-github-com-TideSec-TideFinger"><a href="#2-TideFinger-安装-安装地址：https-github-com-TideSec-TideFinger" class="headerlink" title="2. TideFinger 安装 ( 安装地址：https://github.com/TideSec/TideFinger)"></a>2. TideFinger 安装 ( 安装地址：<a href="https://github.com/TideSec/TideFinger">https://github.com/TideSec/TideFinger</a>)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/<br></code></pre></td></tr></table></figure><h2 id="4-站点接口收集工具"><a href="#4-站点接口收集工具" class="headerlink" title="4. 站点接口收集工具"></a>4. 站点接口收集工具</h2><blockquote><p>使用工具： gospider、uro、x8</p></blockquote><h4 id="1-gospider-安装-安装地址：https-github-com-jaeles-project-gospider"><a href="#1-gospider-安装-安装地址：https-github-com-jaeles-project-gospider" class="headerlink" title="1. gospider 安装 ( 安装地址：https://github.com/jaeles-project/gospider)"></a>1. gospider 安装 ( 安装地址：<a href="https://github.com/jaeles-project/gospider">https://github.com/jaeles-project/gospider</a>)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt isntall gospider<br></code></pre></td></tr></table></figure><h4 id="2-uro-安装-安装地址：https-github-com-s0md3v-uro"><a href="#2-uro-安装-安装地址：https-github-com-s0md3v-uro" class="headerlink" title="2.uro 安装 ( 安装地址：https://github.com/s0md3v/uro)"></a>2.uro 安装 ( 安装地址：<a href="https://github.com/s0md3v/uro">https://github.com/s0md3v/uro</a>)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip3 install uro<br></code></pre></td></tr></table></figure><h4 id="3-x8-安装-安装地址：https-github-com-Sh1Yo-x8"><a href="#3-x8-安装-安装地址：https-github-com-Sh1Yo-x8" class="headerlink" title="3.x8 安装 ( 安装地址：https://github.com/Sh1Yo/x8)"></a>3.x8 安装 ( 安装地址：<a href="https://github.com/Sh1Yo/x8">https://github.com/Sh1Yo/x8</a>)</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">git clone https://github.com/sh1yo/x8<br>cd x8<br>cargo build --release(显示没有cargo命令,用apt install cargo安装cargo)<br>cp ./target/release/x8 /usr/local/bin<br></code></pre></td></tr></table></figure><p>安装时若遇到： failed to run custom build command for <strong>openssl-sys v0.9.83</strong>解决方法可以参考：(<a href="https://blog.csdn.net/luchengtao11/article/details/123974480">https://blog.csdn.net/luchengtao11/article/details/123974480</a>)</p>]]></content>
    
    
    <categories>
      
      <category>txt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2023/05/16/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2023/05/16/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章<br><img src="/2023/05/16/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.jpg" alt="图片"></p><h1 id="WebGoat"><a href="#WebGoat" class="headerlink" title="WebGoat"></a>WebGoat</h1>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/05/13/hello-world/"/>
    <url>/2023/05/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
